@inherits LayoutComponentBase
@inject NavigationManager _navManager  
@inject IJSRuntime _jsRuntime
@using System.Text.Json
@implements IDisposable
@inject IMediaAccountService _mediaAccountService
 
<CascadingValue Value="AuthenticationState" Name="AuthenticationState">
    @if(AuthenticationState.User is null)
    {
        <body>
            @Body
        </body>
    }
    else
    {
        <nav>
            <NavMenu />
        </nav>
        <body>

            <main>
                <div class="container-main">
                    <div class="left">
                        <LeftSection OnThemeButtonClick="ThemeClick" />
                    </div>
                    <div class="middle">
                        @Body
                    </div>
                    <div class="right">
                        @*<RightSection/>*@
                        <div class="messages">
                            <div class="heading">
                                <h4>Messages</h4><i class="uil uil-edit"></i>
                            </div>

                            <div class="search-bar">
                                <i class="uil uil-search"></i>
                                <input type="search" placeholder="Search messages" id="message-search" />
                            </div>

                            <div class="category">
                                <h6 class="active">Primary</h6>
                                <h6>General</h6>
                            </div>

                            <div class="message">
                                <div class="profile-photo">
                                    <img src="https://i.ibb.co/8Kwvmrz/profile-7.jpg" alt="Alternate Text" />
                                    <div class="active"></div>
                                </div>
                                <div class="message-body">
                                    <h5>Full Name</h5>
                                    <p class="text-muted">Just woke up bruh</p>
                                </div>
                            </div>
                            <div class="message">
                                <div class="profile-photo">
                                    <img src="https://i.ibb.co/8Kwvmrz/profile-7.jpg" alt="Alternate Text" />
                                </div>
                                <div class="message-body">
                                    <h5>Full Name</h5>
                                    <p class="text-muted">Just woke up bruh</p>
                                </div>
                            </div>
                            <div class="message">
                                <div class="profile-photo">
                                    <img src="https://i.ibb.co/8Kwvmrz/profile-7.jpg" alt="Alternate Text" />
                                </div>
                                <div class="message-body">
                                    <h5>Full Name</h5>
                                    <p class="text-muted">Just woke up bruh</p>
                                </div>
                            </div>
                            <div class="message">
                                <div class="profile-photo">
                                    <img src="https://i.ibb.co/8Kwvmrz/profile-7.jpg" alt="Alternate Text" />
                                </div>
                                <div class="message-body">
                                    <h5>Full Name</h5>
                                    <p class="text-muted">Just woke up bruh</p>
                                </div>
                            </div>
                            <div class="message">
                                <div class="profile-photo">
                                    <img src="https://i.ibb.co/8Kwvmrz/profile-7.jpg" alt="Alternate Text" />
                                </div>
                                <div class="message-body">
                                    <h5>Full Name</h5>
                                    <p class="text-muted">Just woke up bruh</p>
                                </div>
                            </div>
                        </div>
                    </div>

                </div>
            </main>

            @*  <Preload LoadingText="Loading..." />
        @Body *@

        </body>
        <div class="@(isClicked ? "customize-theme" : "custom-none")">

            <div class="card">
                <h2>Customize your view</h2>
                <p class="text-muted">Manage your font size, color, and background.</p>

                <div class="font-size">
                    <h4>Font Size</h4>
                    <div>
                        <h6>Aa</h6>
                        <div class="choose-size">
                            <span @onclick="()=>ChangeFontSize(1)" class="font-size-1 @(sizeActive == "1"?"active":"")"></span>
                            <span @onclick="()=>ChangeFontSize(2)" class="font-size-2 @(sizeActive == "2"?"active":"")"></span>
                            <span @onclick="()=>ChangeFontSize(3)" class="font-size-3 @(sizeActive == "3"?"active":"")"></span>
                            <span @onclick="()=>ChangeFontSize(4)" class="font-size-4 @(sizeActive == "4"?"active":"")"></span>
                            <span @onclick="()=>ChangeFontSize(5)" class="font-size-5 @(sizeActive == "5"?"active":"")"></span>
                        </div>
                        <h3>Aa</h3>
                    </div>
                </div>


                <div class="color">
                    <h4>Color</h4>
                    <div class="choose-color">
                        <span @onclick="()=>ChangeColor(1)" class="color-1 @(colorActive == "1"?"active":"")"></span>
                        <span @onclick="()=>ChangeColor(2)" class="color-2 @(colorActive == "2"?"active":"")"></span>
                        <span @onclick="()=>ChangeColor(3)" class="color-3 @(colorActive == "3"?"active":"")"></span>
                        <span @onclick="()=>ChangeColor(4)" class="color-4 @(colorActive == "4"?"active":"")"></span>
                        <span @onclick="()=>ChangeColor(5)" class="color-5 @(colorActive == "5"?"active":"")"></span>
                    </div>
                </div>

                <button class="btn-main btn-main-primary" @onclick="()=>isClicked = false">Save</button>

            </div>

        </div>
    }
    
   
</CascadingValue>
@code{
    public AuthenticationState AuthenticationState { get; set; } = new();

    private bool isClicked = false;
    private string sizeActive = "4";
    private string colorActive = "1";

    protected override async Task OnInitializedAsync()
    {
        var authStateJson = await _jsRuntime.InvokeAsync<string>("window.getFromStorage", AuthenticationState.AuthStoreKey);
        if(!string.IsNullOrWhiteSpace(authStateJson))
        {
            var authState = JsonConverter.Deserialize<AuthResponseDto>(authStateJson);
            AuthenticationState.LoadState(authState);

            if(AuthenticationState.IsAuthenticated)
            {
                _navManager.NavigateTo($"/main-page/{AuthenticationState.User.Id}");
            }
        }

        AuthenticationState.PropertyChanged += AuthenticationStateChanged;

    }

    private void AuthenticationStateChanged(object? sender, System.ComponentModel.PropertyChangedEventArgs e)
    {
        if(e.PropertyName == nameof(AuthenticationState.IsAuthenticated))
        {
            if(AuthenticationState.IsAuthenticated)
            {
                _navManager.NavigateTo($"/main-page/{AuthenticationState.User.Id}");
            }
            else
            {
                _navManager.NavigateTo("/");
            }

        }
    }

    public void Dispose()
    {
        AuthenticationState.PropertyChanged -= AuthenticationStateChanged;

    }


    private void ThemeClick()
    {
        isClicked = true;
    }


    private async Task ChangeFontSize(int numberSize)
    {
        if (numberSize == 1)
        {
            sizeActive = "1";
        }
        else if (numberSize == 2)
        {
            sizeActive = "2";
        }
        else if (numberSize == 3)
        {
            sizeActive = "3";
        }
        else if (numberSize == 4)
        {
            sizeActive = "4";
        }
        else if (numberSize == 5)
        {
            sizeActive = "5";
        }
        await _jsRuntime.InvokeVoidAsync("window.changeSize", numberSize);
    }


    private async Task ChangeColor(int colorNumber)
    {
        if (colorNumber == 1)
        {
            colorActive = "1";
        }
        else if (colorNumber == 2)
        {
            colorActive = "2";
        }
        else if (colorNumber == 3)
        {
            colorActive = "3";
        }
        else if (colorNumber == 4)
        {
            colorActive = "4";
        }
        else if (colorNumber == 5)
        {
            colorActive = "5";
        }
        await _jsRuntime.InvokeVoidAsync("window.changeColor", colorNumber);
    }
}