@inherits LayoutComponentBase
@inject NavigationManager _navManager  
@inject IJSRuntime JsRuntime
@using System.Text.Json
@implements IDisposable
 
<CascadingValue Value="AuthenticationState" Name="AuthenticationState">
    <div class="page">
        <div class="sidebar">
            <NavMenu />
        </div>

        <main>

            <article class="content px-4">
                @Body
            </article>
        </main>
    </div>
</CascadingValue>
@code{
    public AuthenticationState AuthenticationState { get; set; } = new();



    protected override async Task OnInitializedAsync()
    {
        var authStateJson =  await JsRuntime.InvokeAsync<string>("window.getFromStorage", AuthenticationState.AuthStoreKey);
        if(!string.IsNullOrWhiteSpace(authStateJson))
        {
            var authState = TestChat.Client.Helpers.JsonConverter.Deserialize<AuthResponseDto>(authStateJson);
            AuthenticationState.LoadState(authState);

            if(AuthenticationState.IsAuthenticated)
            {
                _navManager.NavigateTo("/chat");
            }
        }

        AuthenticationState.PropertyChanged += AuthenticationStateChanged;
    }

    private void AuthenticationStateChanged(object? sender, System.ComponentModel.PropertyChangedEventArgs e)
    {
        if(e.PropertyName == nameof(AuthenticationState.IsAuthenticated))
        {
            if(AuthenticationState.IsAuthenticated)
            {
                _navManager.NavigateTo("/chat");
            }
            else
            {
                _navManager.NavigateTo("/");
            }

        }
    }

    public void Dispose()
    {
        AuthenticationState.PropertyChanged -= AuthenticationStateChanged;

    }
}