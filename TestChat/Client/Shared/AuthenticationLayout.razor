@inherits LayoutComponentBase
@inject NavigationManager _navManager
@inject IJSRuntime JsRuntime
@using System.Text.Json
@implements IDisposable

<CascadingValue Value="AuthenticationState" Name="AuthenticationState">
    <body>

       
        <Preload LoadingText="Loading..." />
        @Body
        @*<main>

                <article class="content px-4">
                    <Preload LoadingText="Loading..." />
                    @Body
                </article>
            </main>*@
    </body>

</CascadingValue>
@code{
    public AuthenticationState AuthenticationState { get; set; } = new();



    protected override async Task OnInitializedAsync()
    {
        var authStateJson = await JsRuntime.InvokeAsync<string>("window.getFromStorage", AuthenticationState.AuthStoreKey);
        if (!string.IsNullOrWhiteSpace(authStateJson))
        {
            var authState = JsonConverter.Deserialize<AuthResponseDto>(authStateJson);
            AuthenticationState.LoadState(authState);

            if (AuthenticationState.IsAuthenticated)
            {
                _navManager.NavigateTo("/chat");
            }
        }

        AuthenticationState.PropertyChanged += AuthenticationStateChanged;
    }

    private void AuthenticationStateChanged(object? sender, System.ComponentModel.PropertyChangedEventArgs e)
    {
        if (e.PropertyName == nameof(AuthenticationState.IsAuthenticated))
        {
            if (AuthenticationState.IsAuthenticated)
            {
                _navManager.NavigateTo("/chat");
            }
            else
            {
                _navManager.NavigateTo("/");
            }

        }
    }

    public void Dispose()
    {
        AuthenticationState.PropertyChanged -= AuthenticationStateChanged;

    }
}